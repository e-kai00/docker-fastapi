FASTAPI:
dev-mode: fastapi dev app/main.py
production mode: uvicorn app.main:app --host 0.0.0.0 --port 8000

DOCKER COMPOSER:
docker-compose build
docker-compose up -d
docker-compose down
docker-compose ps


=========================================================

Task1: Data Engineering and API Development Exercise

Develop a pipeline that involves setting up a MongoDB database using Docker Compose, retrieving and storing data from an external API, and exposing this data through FastAPI.

1. Setup MongoDB with Docker Compose
Use Docker Compose to set up a MongoDB database.

2. Data Retrieval and Loading into MongoDB
Retrieve data from the JSONPlaceholder - Free Fake REST API and store it in MongoDB with python.

3. Create a RESTful API with FastAPI
Develop a FastAPI application to provide access to the mongo data. Include an endpoint to report the total number of posts and comments for each user.


STEPS:
0. Set up Docker Compose
    - install Docker and Docker Compose
    - set up Mongo with Docker Compose
1. Retrieve data from an external API;
2. Store the data in a DB;
3. Provide access to the stored data via an FastAPI.

NOTES:
1. in docker-compose.yml for DB add "volumes" - save data when container is stopped
2. have Docker and Docker Compose installed on your machine
3. do NOT need venv
4. requirements.txt


ISSUES:

1. dependencies from requirements.txt are not being installed or installed in a wrong dir

python-app    | Traceback (most recent call last):
python-app    |   File "app/main.py", line 1, in <module>
python-app    |     import requests
python-app    | ModuleNotFoundError: No module named 'requests'

= Troubleshoot: =

Start containers in background:
docker-compose up -d 
Container shell (while it's running) to check file structure
docker-compose run python-app bash

= Solution: =

changed Dockerfile to: FROM python:3.10-slim


2. exited with code 0

python-app    | INFO:root:Script started
python-app    | []
python-app exited with code 0

= Troubleshoot: =

looks like process stops once CMD ["python", "app/main.py"] completed;
possible solution is to bring process into foreground, do not know how to do it;

= Solution: =

everything was working; put debug print() in the wrong place


ISSUE:

on fastapi dev app/main.py:
TypeError: object NoneType can't be used in 'await' expression
ERROR:    Application shutdown failed. Exiting.

** The error indicates that client is None when attempting to call the close() method. 
This suggests that the global client variable is not being properly initialized before 
the lifespan context manager is used.

= Troubleshoot: =

watch tutorials how to connect DB in FastAPI

ISSUE:

have to use .env and env.py 
goal to set up all variables in .env